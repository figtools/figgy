name: Release

on:
  create:
    tags:
      - v*

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        sudo apt-get install libusb-1.0-0-dev
        python -m pip install --upgrade pip
        pip install setuptools twine pip wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Upload To PyPi
      env:
        PYPI_RC: ${{ secrets.PYPI_FIGGY_CLI }}
      run: |
        echo "${PYPI_RC}" > ~/.pypirc
        cd cli
        ./scripts/deploy-pypi.sh

    - name: Prep Release
      id: prep
      run: |
        cd cli
        # Parse version
        VERSION=$(./scripts/get_version.sh)
        echo "Setting release version to $VERSION"
        echo "::set-env name=RELEASE_VERSION::$VERSION"

        # Parse changelog
        CHANGELOG=$(./scripts/parse_changelog.sh)
        CHANGELOG="${CHANGELOG//'%'/'%25'}"
        CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
        CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"

        echo "Got changelog: $CHANGELOG"
        echo "::set-output name=changelog::$CHANGELOG"

    - name: Create Release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{ env.RELEASE_VERSION }}
        body: ${{ steps.prep.outputs.changelog }}
        draft: false
        prerelease: true
