name: Python application

on:
  push:
    branches: [develop, master]
  pull_request:
    branches: [develop, master]
  watch:
    types: [started]


jobs:
#  test:
#    runs-on: ubuntu-latest
#    if: github.actor == github.event.repository.owner.login
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python 3.8
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.8
#      - name: Install dependencies
#        env:
#          FIGGY_TEST: true
#        run: |
#          sudo apt-get update \
#          && sudo apt-get install libusb-1.0-0-dev libxmu-dev libxmu-headers \
#          freeglut3-dev libxext-dev libxi-dev libudev1 libudev-dev
#
#      - name: Install figgy
#        run: |
#          cd cli
#          pip install -r requirements.txt
#          pip install -r requirements-linux.txt
#          scripts/install.sh
#      - name: Run E2E Test Suite
#        run: |
#          export TERM=linux
#          export TERMINFO=/etc/terminfo
#          cd cli
#          python run_tests.py

  build:
    if: github.ref == 'refs/heads/master'
#    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        sudo apt-get install libusb-1.0-0-dev
        python -m pip install --upgrade pip
        pip install setuptools twine pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Upload To PyPi
      env:
        PYPI_RC: ${{ secrets.PYPI_FIGGY_CLI }}
      run: |
        echo "${PYPI_RC}" > ~/.pypirc
        cd cli
        ./scripts/deploy-pypi.sh
        VERSION=$(./scripts/get_version.sh)
        export RELEASE_VERSION=$VERSION
        echo "::set-env name=RELEASE_VERSION::$RELEASE_VERSION"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: $RELEASE_VERSION
        release_name: Release $RELEASE_VERSION
        body: |
          Figgy v. $RELEASE_VERSION
        draft: false
        prerelease: false