name: Build

on:
  push:
    branches: [develop, master, build]
  pull_request:
    branches: [develop, master, build]

jobs:
  build_mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          echo "MacOs build is happening!!!"
          cd cli
          pip3 install pyinstaller
          pip3 install -r requirements.txt
          pip3 install -r requirements-darwin.txt

          echo "Building figgy onedir"
          pyinstaller figcli/__main__.py --onedir --hiddenimport configparser --hiddenimport keyrings --hiddenimport keyring.backends --hiddenimport pycryptodome  --hiddenimport pkg_resources.py2_warn
          cd dist/__main__/
          mv __main__ figgy
          zip -r figgy.zip .

      - name: Deploy as latest
        env:
          CONFIG_FILE: ${{ secrets.CONFIG_DEFAULT }}
          CREDENTIALS_FILE: ${{ secrets.CREDENTIALS_DEPLOY }}
        run: |
          mkdir -p ~/.aws
          echo "$CONFIG_FILE" > ~/.aws/config
          echo "$CREDENTIALS_FILE" > ~/.aws/credentials

          dest="s3://figgy-website/releases/cli/latest/darwin/figgy.zip"
          aws s3 cp cli/dist/__main__/figgy.zip $dest

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          sudo apt-get update \
          && sudo apt-get install libusb-1.0-0-dev libxmu-dev libxmu-headers \
          freeglut3-dev libxext-dev libxi-dev libudev1 libudev-dev

      - name: Build
        run: |
          echo "Linux build is happening!!!"
          # install requirements

          cd cli
          pip3 install pyinstaller
          pip3 install -r requirements.txt
          pip3 install -r requirements-linux.txt

          pyinstaller figcli/__main__.py --hiddenimport configparser --hiddenimport keyrings --hiddenimport keyring.backends --hiddenimport pkg_resources.py2_warn
          cd dist/__main__/
          mv __main__ figgy
          zip -r figgy.zip .

      - name: Deploy as latest
        env:
          CONFIG_FILE: ${{ secrets.CONFIG_DEFAULT }}
          CREDENTIALS_FILE: ${{ secrets.CREDENTIALS_DEPLOY }}
        run: |
          mkdir -p ~/.aws
          echo "$CONFIG_FILE" > ~/.aws/config
          echo "$CREDENTIALS_FILE" > ~/.aws/credentials

          dest="s3://figgy-website/releases/cli/latest/linux/figgy.zip"
          echo "Deploying linux figgy to $dest"
          aws s3 cp cli/dist/__main__/figgy.zip $dest


  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Build
        run: |
          echo "Windows build is happening!!!"
          # install requirements

          cd cli
          pip3 install pyinstaller
          pip3 install -r requirements.txt
          pip3 install -r requirements-windows.txt

          pyinstaller figcli/__main__.py --hiddenimport configparser --hiddenimport pyreadline --hiddenimport win32timezone --hiddenimport keyrings  --hiddenimport pkg_resources.py2_warn --hiddenimport keyring.backends
          cd dist/__main__/
          mv __main__ figgy
          zip -r figgy.zip .


      - name: Deploy as latest
        env:
          CONFIG_FILE: ${{ secrets.CONFIG_DEFAULT }}
          CREDENTIALS_FILE: ${{ secrets.CREDENTIALS_DEPLOY }}
        run: |
          mkdir -p ~/.aws
          echo "$CONFIG_FILE" > ~/.aws/config
          echo "$CREDENTIALS_FILE" > ~/.aws/credentials

          dest="s3://figgy-website/releases/cli/latest/windows/figgy.zip"
          echo "Deploying windows figgy to $dest"
          aws s3 cp cli/dist/__main__/figgy.zip $dest
