name: Test

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  test_bastion:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        env:
          FIGGY_TEST: true
        run: |
          sudo apt-get update \
          && sudo apt-get install libusb-1.0-0-dev libxmu-dev libxmu-headers \
          freeglut3-dev libxext-dev libxi-dev libudev1 libudev-dev

      - name: Install figgy
        run: |
          cd cli
          pip install -r requirements.txt
          pip install -r requirements-linux.txt
          scripts/install.sh

      - name: Run E2E Test Suite
        env:
          FIGGY_DISABLE_KEYRING: true
          OVERRIDE_KEYRING: true
        run: |
          export TERM=linux
          export TERMINFO=/etc/terminfo
          cd cli
          python run_tests.py bastion

#  test_google:
#    runs-on: ubuntu-latest
#    needs: [test_okta]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python 3.8
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.8
#      - name: Install dependencies
#        env:
#          FIGGY_TEST: true
#        run: |
#          sudo apt-get update \
#          && sudo apt-get install libusb-1.0-0-dev libxmu-dev libxmu-headers \
#          freeglut3-dev libxext-dev libxi-dev libudev1 libudev-dev
#
#      - name: Install figgy
#        run: |
#          cd cli
#          pip install -r requirements.txt
#          pip install -r requirements-linux.txt
#          scripts/install.sh
#      - name: Run E2E Test Suite
#        env:
#          FIGGY_DISABLE_KEYRING: true
#          OVERRIDE_KEYRING: true
#          GOOGLE_IDP_ID: ${{ secrets.GOOGLE_IDP_ID }}
#          GOOGLE_SP_ID: ${{ secrets.GOOGLE_SP_ID }}
#          GOOGLE_SSO_PASSWORD: ${{ secrets.GOOGLE_SSO_PASSWORD }}
#          GOOGLE_SSO_USER: ${{ secrets.GOOGLE_SSO_USER }}
#        run: |
#          export TERM=linux
#          export TERMINFO=/etc/terminfo
#          cd cli
#          python run_tests.py google

  test_okta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        env:
          FIGGY_TEST: true
        run: |
          sudo apt-get update \
          && sudo apt-get install libusb-1.0-0-dev libxmu-dev libxmu-headers \
          freeglut3-dev libxext-dev libxi-dev libudev1 libudev-dev

      - name: Install figgy
        run: |
          cd cli
          pip install -r requirements.txt
          pip install -r requirements-linux.txt
          scripts/install.sh

      - name: Run E2E Test Suite
        env:
          FIGGY_DISABLE_KEYRING: true
          OVERRIDE_KEYRING: true
          OKTA_SSO_USER: ${{ secrets.OKTA_SSO_USER }}
          OKTA_SSO_PASSWORD: ${{ secrets.OKTA_SSO_PASSWORD }}
          OKTA_EMBED_URL: ${{ secrets.OKTA_EMBED_URL }}
          OKTA_MFA_SECRET: ${{ secrets.OKTA_MFA_SECRET }}
        run: |
          export TERM=linux
          export TERMINFO=/etc/terminfo
          cd cli
          python run_tests.py okta

  test_profile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          sudo apt-get update \
          && sudo apt-get install libusb-1.0-0-dev libxmu-dev libxmu-headers \
          freeglut3-dev libxext-dev libxi-dev libudev1 libudev-dev

      - name: Install figgy
        run: |
          cd cli
          pip install -r requirements.txt
          pip install -r requirements-linux.txt
          scripts/install.sh

      - name: Run E2E Test Suite
        env:
          FIGGY_DISABLE_KEYRING: true
          OVERRIDE_KEYRING: true
          CONFIG_DEFAULT: ${{ secrets.CONFIG_FILE }}
          CREDENTIALS_FILE: ${{ secrets.QA_TESTER_CREDENTIALS_FILE }}
          CONFIG_FILE: ${{ secrets.QA_TESTER_CONFIG_FILE }}
          AWS_REGION: us-east-1
        run: |
          mkdir -p ~/.aws
          echo "$CREDENTIALS_FILE" > ~/.aws/credentials
          echo "$CONFIG_FILE" > ~/.aws/config

          cat ~/.aws/config
          export TERM=linux
          export TERMINFO=/etc/terminfo
          cd cli
          python run_tests.py profile figgy-qa-tester